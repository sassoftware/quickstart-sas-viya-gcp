resources:

###############################################
# Create the Ansible Controller VM, bastion host
###############################################
- name: {{ env["deployment"] }}-ansible-controller
  type: gcp-types/compute-v1:instances
  properties:
    zone: {{ properties["zone"] }}
    machineType: zones/{{ properties["zone"] }}/machineTypes/g1-small
    serviceAccounts:
    - email: $(ref.{{ env["deployment"] }}-ansible-svc-account.email)
      scopes:
      - https://www.googleapis.com/auth/cloud-platform
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/rhel-cloud/global/images/family/rhel-7
        diskSizeGb: 10
    networkInterfaces:
    - subnetwork: $(ref.{{ env["deployment"] }}-public-subnet.selfLink)
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items:
      - sas-viya-ansible-controller
    metadata:
      items:
        - key: ssh-keys
          value: sasinstall:{{ properties["ssh-key"] }}
        - key: block-project-ssh-keys
          value: 'true'
        - key: startup-script
          value: |
            #!/bin/bash
            # The VM needs a few seconds to come up before executing the startup scripts
            sleep 10
            ###################################
            # Setting up environment
            ###################################
            export COMMON_CODE_TAG="{{ properties["COMMON_CODE_TAG"] }}"
            export OLCROOTPW="{{ properties["OLCROOTPW"] }}"
            export OLCUSERPW="{{ properties["OLCUSERPW"] }}"
            export VIYA_VERSION=$(echo "{{ properties["VIYA_VERSION"] }}" | sed 's/\\//')
            export DEPLOYMENT_DATA_LOCATION="{{ properties["DEPLOYMENT_DATA_LOCATION"] }}"
            export IAAS=gcp
            export INSTALL_DIR=/sas/install
            export LOG_DIR=/var/log/sas/install
            /bin/su sasinstall -c "export > /home/sasinstall/SAS_VIYA_DEPLOYMENT_ENVIRONMENT"
            ###################################
            # Installing dependencies
            ###################################
            yum install -y java-1.8.0-openjdk
            yum install -y epel-release
            yum install -y python-pip
            yum install -y git
            # Getting quick start scripts from Github  # TODO: Remove '-b develop' before push to master
            git clone https://github.com/sassoftware/quickstart-sas-viya-gcp $INSTALL_DIR -b develop
            # Clean up GitHub identifier files
            pushd $INSTALL_DIR
            rm -rf .git*
            popd
            # Getting specific release of quick start common code from Github
            git clone https://github.com/sassoftware/quickstart-sas-viya-common $INSTALL_DIR/common 
            pushd $INSTALL_DIR/common
            git checkout tags/$COMMON_CODE_TAG -b $COMMON_CODE_TAG
            # Clean up GitHub identifier files
            rm -rf .git*
            popd
            # Updating ownership so that sasinstall user can read/write
            chown -R sasinstall:sasinstall $INSTALL_DIR
            # Bootstrapping ansible controller machine
            /bin/su sasinstall -c "$INSTALL_DIR/common/scripts/ansiblecontroller_prereqs.sh"
            export ANSIBLE_CONFIG=$INSTALL_DIR/common/ansible/playbooks/ansible.cfg
            ###################################
            # Ansible playbook does additional steps needed before installing SAS, including
            # - host routing
            # - volume attachments
            # - setting up directories and users
            ###################################
            export ANSIBLE_LOG_PATH=$LOG_DIR/prepare_nodes.log
            /bin/su sasinstall -c "ansible-playbook -v $INSTALL_DIR/common/ansible/playbooks/prepare_nodes.yml \
                -e SAS_INSTALL_DISK=/dev/disk/by-id/google-sashome \
                -e USERLIB_DISK=/dev/disk/by-id/google-userlib \
                -e CASCACHE_DISK=/dev/disk/by-id/google-cascache"
            ###################################
            # Ansible playbook sets up an OpenLDAP server that can be used as initial identity provider for SAS Viya.
            ###################################
            export ANSIBLE_LOG_PATH=$LOG_DIR/openldapsetup.log
            /bin/su sasinstall -c "ansible-playbook -v $INSTALL_DIR/common/ansible/playbooks/openldapsetup.yml \
                -e OLCROOTPW=$(echo -n "$OLCROOTPW" | base64) \
                -e OLCUSERPW=$(echo -n "$OLCUSERPW" | base64)"
            ###################################
            # Ansible playbook does additional steps needed before installing SAS,  including
            # - download sas-orchestration
            # - set up access to deployment mirror (optional)
            # - build playbook from SOE file
            # - modify inventory.ini and vars.yml
            ###################################
            export ANSIBLE_LOG_PATH=$LOG_DIR/prepare_deployment.log
            /bin/su sasinstall -c "ansible-playbook -v $INSTALL_DIR/common/ansible/playbooks/prepare_deployment.yml \
                -e DEPLOYMENT_DATA_LOCATION=$DEPLOYMENT_DATA_LOCATION \
                -e ADMINPASS=$(echo "$OLCROOTPW" | base64) \
                -e VIYA_VERSION=$VIYA_VERSION"
            ###################################
            # Run VIRK
            # The VIRK pre-install playbook covers most of the Viya Deployment Guide prereqs in one fell swoop.
            ###################################
            export ANSIBLE_LOG_PATH=$LOG_DIR/virk.log
            export ANSIBLE_INVENTORY=$INSTALL_DIR/ansible/sas_viya_playbook/inventory.ini
            /bin/su sasinstall -c "ansible-playbook -v $INSTALL_DIR/ansible/sas_viya_playbook/virk/playbooks/pre-install-playbook/viya_pre_install_playbook.yml \
               -e "use_pause=false" \
               --skip-tags skipmemfail,skipcoresfail,skipstoragefail,skipnicssfail,bandwidth"
            ##################################
            # Install Viya
            ##################################
            export ANSIBLE_LOG_PATH=$LOG_DIR/viya_deployment.log
            export ANSIBLE_CONFIG=$INSTALL_DIR/ansible/sas_viya_playbook
            pushd /sas/install/ansible/sas_viya_playbook
            /bin/su sasinstall -c "ansible-playbook -v site.yml"
            ##################################
            # Post Deployment Steps
            ##################################
            export ANSIBLE_LOG_PATH=$LOG_DIR/post_deployment.log
            export ANSIBLE_CONFIG=$INSTALL_DIR/common/ansible/playbooks/ansible.cfg
            /bin/su sasinstall -c "ansible-playbook -v $INSTALL_DIR/common/ansible/playbooks/post_deployment.yml"
            ##################################
            # Final system update
            ##################################
            yum -y update
            /bin/su sasinstall -c "echo 'Check /var/log/sas/install for deployment logs.' > /home/sasinstall/SAS_VIYA_DEPLOYMENT_FINISHED"


###############################################
# Create the SAS Viya Services VM.  Runs all the Viya microservices
###############################################
- name: {{ env["deployment"] }}-services
  type: gcp-types/compute-v1:instances
  properties:
    zone: {{ properties["zone"] }}
    machineType: zones/{{ properties["zone"] }}/machineTypes/n1-highmem-8
    hostname: services.viya.sas
    serviceAccounts:
    - email: $(ref.{{ env["deployment"] }}-ansible-svc-account.email)
      scopes:
      - https://www.googleapis.com/auth/cloud-platform    
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/rhel-cloud/global/images/family/rhel-7
        diskSizeGb: 25

    - deviceName: sashome
      type: PERSISTENT
      boot: false
      autoDelete: true
      initializeParams:
          diskName: {{ env["deployment"] }}-sashome-services
          diskSizeGb: 100
          description: SAS_INSTALL_DISK

    networkInterfaces:
    - subnetwork: $(ref.{{ env["deployment"] }}-private-subnet.selfLink)
    metadata:
      items:
        - key: ssh-keys
          value: sasinstall:{{ properties["ssh-key"] }}
        - key: block-project-ssh-keys
          value: 'true'
        - key: startup-script
          value: |
            #! /bin/bash
            # Setting up environment
            export NFS_SERVER={{ env["deployment"] }}-ansible-controller
            export HOST=`hostname`
            # Installing dependencies
            yum -y install git
            # Getting quick start scripts
            git clone https://github.com/sassoftware/quickstart-sas-viya-common /tmp/common
            # Bootstrapping all SAS VM
            /bin/su sasinstall -c '/tmp/common/scripts/sasnodes_prereqs.sh'
            # VIRK requires GID 1001 to be free
            groupmod -g 2001 sasinstall
            # Final system update
            yum -y update

    tags:
      items:
      - sas-viya-vm
        

###############################################
# Create the CAS Controller VM
###############################################
- name: {{ env["deployment"] }}-controller
  type: gcp-types/compute-v1:instances
  properties:
    zone: {{ properties["zone"] }}
    machineType: zones/{{ properties["zone"] }}/machineTypes/n1-standard-2
    hostname: controller.viya.sas
    serviceAccounts:
    - email: $(ref.{{ env["deployment"] }}-ansible-svc-account.email)
      scopes:
      - https://www.googleapis.com/auth/cloud-platform    
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/rhel-cloud/global/images/family/rhel-7
        diskSizeGb: 10
        
    - deviceName: sashome
      type: PERSISTENT
      boot: false
      autoDelete: true
      initializeParams:
          diskName: {{ env["deployment"] }}-sashome-controller
          diskSizeGb: 50
          description: SAS_INSTALL_DISK

    - deviceName: userlib
      type: PERSISTENT
      boot: false
      autoDelete: true
      kind: compute#attachedDisk
      mode: READ_WRITE      
      initializeParams:
          diskName: {{ env["deployment"] }}-userlib
          diskType: projects/ace-dev/zones/{{ properties["zone"] }}/diskTypes/pd-standard
          diskSizeGb: 50
          description: USERLIB_DISK

    - deviceName: cascache
      type: PERSISTENT
      boot: false
      autoDelete: true
      kind: compute#attachedDisk
      mode: READ_WRITE      
      initializeParams:
          diskName: {{ env["deployment"] }}-cascache
          diskType: projects/ace-dev/zones/{{ properties["zone"] }}/diskTypes/pd-standard
          diskSizeGb: 50
          description: CASCACHE_DISK

    networkInterfaces:
    - subnetwork: $(ref.{{ env["deployment"] }}-private-subnet.selfLink)
    metadata:
      items:
        - key: ssh-keys
          value: sasinstall:{{ properties["ssh-key"] }}
        - key: block-project-ssh-keys
          value: 'true'
        - key: startup-script
          value: |
            #! /bin/bash
            # Setting up environment
            export NFS_SERVER={{ env["deployment"] }}-ansible-controller
            export HOST=`hostname`
            # Installing dependencies
            yum -y install git
            # Getting quick start scripts
            git clone https://github.com/sassoftware/quickstart-sas-viya-common /tmp/common
            # Bootstrapping all SAS VM
            /bin/su sasinstall -c '/tmp/common/scripts/sasnodes_prereqs.sh'
            # VIRK requires GID 1001 to be free
            groupmod -g 2001 sasinstall
            # Final system update
            yum -y update

    tags:
      items:
      - sas-viya-vm
      