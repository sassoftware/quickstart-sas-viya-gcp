resources:

- name: iam
  type: iam.py

- name: networks
  type: networks.py
  properties:
    Region: {{ properties["Zone"][:-2] }}
    AdminIngressLocation: {{ properties["AdminIngressLocation"] }}
    WebIngressLocation: {{ properties["AdminIngressLocation"] }}

- name: vm-ansible-controller
  type: vm-ansible-controller.py
  properties:
     AnsibleControllerMachineType: {{ properties["AnsibleControllerMachineType"] }}
     Zone: {{ properties["Zone"] }}
     SSHPublicKey: {{ properties["SSHPublicKey"] }}
     SASAdminPass: {{ properties["SASAdminPass"] }}
     SASUserPass: {{ properties["SASUserPass"] }}
     DeploymentDataLocation: {{ properties["DeploymentDataLocation"] }}
     DeploymentMirror: {{ properties["DeploymentMirror"] }}
     CASInstanceCount: {{ properties["CASInstanceCount"] }}
     
- name: vm-services
  type: vm-services.py
  properties:
     ServicesMachineType: {{ properties["ServicesMachineType"] }}
     Zone: {{ properties["Zone"] }}
     SSHPublicKey: {{ properties["SSHPublicKey"] }}

  {% if properties["CASInstanceCount"]  == 1 %}
- name: vm-controller
  type: vm-controller.py
  properties:
     ControllerMachineType: {{ properties["ControllerMachineType"] }}
     Zone: {{ properties["Zone"] }}
     SSHPublicKey: {{ properties["SSHPublicKey"] }}
    {% else %}
- name: vm-controller-mpp
  type: vm-controller-mpp.py
  properties:
     ControllerMachineType: {{ properties["ControllerMachineTypeMPP"] }}
     Zone: {{ properties["Zone"] }}
     SSHPublicKey: {{ properties["SSHPublicKey"] }}
  {% for (count) in range(properties["CASInstanceCount"] ) %}
- name: vm-worker{{ count +1 }}
  type: vm-worker.py
  properties:
     WorkerMachineType: {{ properties["WorkerMachineType"] }}
     Zone: {{ properties["Zone"] }}
     SSHPublicKey: {{ properties["SSHPublicKey"] }}
     CASInstanceCount: {{ count+1 }}
  {% endfor %}
  {% endif %}

- name: loadbalancer
  type: loadbalancer.py
  properties:
     Zone: {{ properties["Zone"] }}
     Region: {{ properties["Zone"][:-2] }}

- name: runtimeconfig
  type: runtimeconfig.py
